/* 
 * Copyright (C) 2015 Luis Ch√°vez
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.github.luischavez.levsym.modulos.compra;

import com.github.luischavez.levsym.modulos.funcion.Calc;
import com.github.luischavez.levsym.modulos.funcion.Log;
import com.github.luischavez.levsym.modulos.funcion.Sql;

import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Calendar;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis
 */
public class NuevoCompra extends javax.swing.JPanel {

    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form NuevoCompra
     */
    public NuevoCompra() {
        initComponents();
        ObtenerProveedor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopMenu = new javax.swing.JPopupMenu();
        EditarPrecio = new javax.swing.JMenuItem();
        EditarCantidad = new javax.swing.JMenuItem();
        Eliminar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Factura = new javax.swing.JTextField();
        Fecha = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Proveedor = new javax.swing.JComboBox();
        Producto = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Compra = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        IVA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        SubTotal = new javax.swing.JTextField();
        Total = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Enviar = new javax.swing.JButton();

        EditarPrecio.setText("Editar Precio");
        EditarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarPrecioActionPerformed(evt);
            }
        });
        PopMenu.add(EditarPrecio);

        EditarCantidad.setText("Editar Cantidad");
        EditarCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarCantidadActionPerformed(evt);
            }
        });
        PopMenu.add(EditarCantidad);

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        PopMenu.add(Eliminar);

        setBackground(new java.awt.Color(0, 102, 204));
        setMaximumSize(new java.awt.Dimension(374, 495));
        setMinimumSize(new java.awt.Dimension(374, 495));

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.lightGray, null, null));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Factura");

        Factura.setEditable(false);

        Fecha.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Factura, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(Factura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Calendar c = Calendar.getInstance();
        Fecha.setDate(c.getTime());

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.lightGray, null, null));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Proveedor");

        Proveedor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona" }));
        Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProveedorActionPerformed(evt);
            }
        });

        Producto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona" }));
        Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Producto");

        Compra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Compra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CompraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Compra);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(Producto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.lightGray, null, null));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("IVA");

        IVA.setEditable(false);
        IVA.setText(".16");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("SubTotal");

        SubTotal.setEditable(false);

        Total.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Total");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(IVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Enviar.setText("Enviar");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Enviar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Enviar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProveedorActionPerformed
        // TODO add your handling code here:
        if (Proveedor.getSelectedIndex() > 0) {
            ObtenerProductos(Proveedor.getSelectedItem());
        }
    }//GEN-LAST:event_ProveedorActionPerformed

    private void CompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CompraMouseClicked
        // TODO add your handling code here:
        if (Compra.getSelectedRow() >= 0) {
            if (evt.getButton() == MouseEvent.BUTTON3) {
                PopMenu.show(Compra, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_CompraMouseClicked

    private void ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductoActionPerformed
        // TODO add your handling code here:
        Boolean IsFree = true;
        if (Producto.getSelectedIndex() > 0) {
            String[] splitProducto = Producto.getSelectedItem().toString().split(" ", 2);
            for (int x = 0; x < Compra.getRowCount(); x++) {
                if (Compra.getValueAt(x, 0).toString().equals(splitProducto[0])) {
                    IsFree = false;
                }
            }
            if (IsFree) {
                AgregarProducto(Producto.getSelectedItem());
                ActualizarPrecios();
            } else {
                JOptionPane.showMessageDialog(Compra, "Producto ya agregado, si quieres cambiar la cantidad editalo", "Error", JOptionPane.ERROR_MESSAGE, null);
            }
        }
    }//GEN-LAST:event_ProductoActionPerformed

    private void EditarCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarCantidadActionPerformed
        // TODO add your handling code here:
        if (Compra.getSelectedRow() >= 0) {
            String Cantidad = JOptionPane.showInputDialog(this, "Cantidad", "Selecciona la cantidad", JOptionPane.INFORMATION_MESSAGE);
            if (Cantidad != null) {
                Compra.setValueAt(Cantidad, Compra.getSelectedRow(), Compra.getColumnCount() - 1);
            }
            ActualizarPrecios();
        }
    }//GEN-LAST:event_EditarCantidadActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
        if (Compra.getSelectedRow() >= 0) {
            modelo.removeRow(Compra.getSelectedRow());
            ActualizarPrecios();
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
        // TODO add your handling code here:
        Object[] Entry = new Object[6];
        String Product = new String();
        String Cantidad = new String();
        for (int x = 0; x < Compra.getRowCount(); x++) {
            Product += Compra.getValueAt(x, 1) + ",";
            Cantidad += Compra.getValueAt(x, 3);
        }
        Entry[0] = Product;
        Entry[1] = Cantidad;
        Entry[2] = SubTotal.getText();
        if (Proveedor.getSelectedIndex() <= 0) {
            Entry[3] = 0;
        } else {
            String[] splitProveedor = Proveedor.getSelectedItem().toString().split(" ", 2);
            Entry[3] = splitProveedor[0];
        }
        Entry[4] = Total.getText();
        Update(Entry);
    }//GEN-LAST:event_EnviarActionPerformed

    private void EditarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarPrecioActionPerformed
        // TODO add your handling code here:
        if (Compra.getSelectedRow() >= 0) {
            String Precio = JOptionPane.showInputDialog(this, "Precio", "Ingresa el Precio deseado", JOptionPane.INFORMATION_MESSAGE);
            if (Precio != null) {
                Compra.setValueAt(Precio, Compra.getSelectedRow(), Compra.getColumnCount() - 2);
            }
            ActualizarPrecios();
        }
    }//GEN-LAST:event_EditarPrecioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Compra;
    private javax.swing.JMenuItem EditarCantidad;
    private javax.swing.JMenuItem EditarPrecio;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JButton Enviar;
    private javax.swing.JTextField Factura;
    private com.toedter.calendar.JDateChooser Fecha;
    private javax.swing.JTextField IVA;
    private javax.swing.JPopupMenu PopMenu;
    private javax.swing.JComboBox Producto;
    private javax.swing.JComboBox Proveedor;
    private javax.swing.JTextField SubTotal;
    private javax.swing.JTextField Total;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void ObtenerProveedor() {
        try {
            ResultSet SqlQuery = Sql.SqlQuery(Sql.connection, "SELECT clave,nombre,ap_paterno,ap_materno FROM proveedor");
            while (SqlQuery.next()) {
                Proveedor.addItem(SqlQuery.getObject(1).toString()
                        + " " + SqlQuery.getObject(2).toString()
                        + " " + SqlQuery.getObject(3).toString()
                        + " " + SqlQuery.getObject(4).toString());
            }
            Sql.Clear();
        } catch (SQLException ex) {
            Log.SaveLog(ex.toString());
        }
    }

    private void ObtenerProductos(Object Clave) {
        Producto.removeAllItems();
        Producto.addItem("Selecciona");
        String[] splitClave = Clave.toString().split(" ", 2);
        try {
            ResultSet SqlQuery = Sql.SqlQuery(Sql.connection, "SELECT clave,nombre FROM productos WHERE proveedor=" + splitClave[0]);
            while (SqlQuery.next()) {
                Producto.addItem(SqlQuery.getObject(1).toString()
                        + " " + SqlQuery.getObject(2).toString());
            }
            Sql.Clear();
        } catch (SQLException ex) {
            Log.SaveLog(ex.toString());
        }
    }

    private void AgregarProducto(Object Clave) {
        String[] splitProducto = Clave.toString().split(" ", 2);
        String Cantidad = JOptionPane.showInputDialog(this, "Cantidad", "Selecciona la cantidad", JOptionPane.INFORMATION_MESSAGE);
        try {
            ResultSet SqlQuery = Sql.SqlQuery(Sql.connection, "SELECT clave,nombre,costo_unit FROM productos WHERE clave=" + splitProducto[0]);
            ResultSetMetaData metaData = SqlQuery.getMetaData();
            Object[] Row = new Object[metaData.getColumnCount() + 1];
            if (modelo.getColumnCount() <= 0) {
                for (int x = 0; x < metaData.getColumnCount(); x++) {
                    modelo.addColumn(metaData.getColumnName(x + 1));
                }
                modelo.addColumn("Cantidad");
                Compra.setModel(modelo);
            }

            if (SqlQuery.next()) {
                for (int x = 0; x < metaData.getColumnCount(); x++) {
                    Row[x] = SqlQuery.getObject(x + 1);
                }
                Row[metaData.getColumnCount()] = Integer.valueOf(Cantidad);
            }
            modelo.addRow(Row);
            Sql.Clear();
        } catch (SQLException ex) {
            Log.SaveLog(ex.toString());
        }
    }

    private void ActualizarPrecios() {
        Double subtotal = new Double(0);
        for (int x = 0; x < Compra.getRowCount(); x++) {
            subtotal += Double.parseDouble(Compra.getValueAt(x, 2).toString()) * Integer.parseInt(Compra.getValueAt(x, 3).toString());
        }
        SubTotal.setText(String.valueOf(subtotal));
        Total.setText(String.valueOf(subtotal + (subtotal * Double.parseDouble(IVA.getText()))));
    }

    private void Update(Object[] Entry) {
        try {
            PreparedStatement SqlQueryStmts = null;
            SqlQueryStmts = Sql.SqlQueryStmts(Sql.connection, "INSERT INTO compras VALUES (?,?,?,?,?,?,?)");
            SqlQueryStmts.setNull(1, java.sql.Types.INTEGER); //clave
            SqlQueryStmts.setDate(2, new Date(Fecha.getDate().getTime())); //Fecha
            SqlQueryStmts.setString(3, Entry[0].toString()); //Productos
            SqlQueryStmts.setInt(4, Integer.valueOf(Entry[1].toString())); //Cantidad
            SqlQueryStmts.setDouble(5, Double.valueOf(Entry[2].toString())); //Subtotal
            SqlQueryStmts.setInt(6, Integer.valueOf(Entry[3].toString())); //Proveedor
            SqlQueryStmts.setDouble(7, Double.valueOf(Entry[4].toString())); //Importe Compra
            SqlQueryStmts.execute();
            ResultSet generatedKeys = SqlQueryStmts.getGeneratedKeys();
            if (generatedKeys.next()) {
                Factura.setText(Calc.ZeroFill("00000", generatedKeys.getObject(1).toString()));
            }
            SqlQueryStmts.close();
            Sql.Clear();
            JOptionPane.showMessageDialog(this, "Registro Insertado Correctamente", "SQL INFO", JOptionPane.INFORMATION_MESSAGE, null);
        } catch (SQLException ex) {
            Log.SaveLog(ex.toString());
            JOptionPane.showMessageDialog(this, "Ocurrio un error", "SQL ERROR", JOptionPane.ERROR_MESSAGE, null);
        }
    }

}
