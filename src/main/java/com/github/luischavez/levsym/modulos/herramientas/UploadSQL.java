/* 
 * Copyright (C) 2015 Luis Ch√°vez
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.github.luischavez.levsym.modulos.herramientas;

import com.github.luischavez.levsym.modulos.funcion.Log;
import com.github.luischavez.levsym.modulos.funcion.Sql;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis
 */
public class UploadSQL extends javax.swing.JPanel {

    private Statement Instruccion;
    int NumQuery = 0;

    /**
     * Creates new form UploadSQL
     */
    public UploadSQL() {
        initComponents();
        try {
            Instruccion = Sql.connection.createStatement();
        } catch (SQLException ex) {
            Log.SaveLog(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Dir = new javax.swing.JTextField();
        Examinar = new javax.swing.JButton();
        Subir = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setBackground(new java.awt.Color(0, 102, 204));
        setMaximumSize(new java.awt.Dimension(417, 116));
        setMinimumSize(new java.awt.Dimension(417, 116));

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.lightGray, null, null));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Selecciona un archivo sql para subir a la base de datos actual");

        Dir.setEditable(false);

        Examinar.setText("Examinar");
        Examinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExaminarActionPerformed(evt);
            }
        });

        Subir.setText("Subir");
        Subir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Dir, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Examinar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Subir))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Dir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Examinar)
                    .addComponent(Subir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExaminarActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(System.getProperty("user.dir"));
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setRequestFocusEnabled(true);
        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            Dir.setText(file.toString());
        }
    }//GEN-LAST:event_ExaminarActionPerformed

    private void SubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubirActionPerformed
        // TODO add your handling code here:
        final String Directory = Dir.getText();
        if (Directory.substring(Directory.length() - 3, Directory.length()).equals("sql")) {
            Thread t = new Thread(new Runnable() {

                @Override
                public void run() {
                    Upload(Directory);
                }
            });
            t.start();
        }
    }//GEN-LAST:event_SubirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Dir;
    private javax.swing.JButton Examinar;
    private javax.swing.JButton Subir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

    private void Upload(String Directory) {
        Subir.setEnabled(false);
        NumQuery = 0;
        File sql = new File(Directory);
        try {
            BufferedReader br = new BufferedReader(new FileReader(sql));
            String linea;
            try {
                linea = br.readLine();
                while (linea != null) {
                    if (!linea.isEmpty()) {
                        if (!linea.substring(0, 2).equals("--")) {
                            while (!linea.substring(linea.length() - 1, linea.length()).equals(";")) {
                                linea += br.readLine();
                            }
                            if (linea.substring(linea.length() - 1, linea.length()).equals(";")) {
                                try {
                                    Instruccion.execute(linea);
                                    NumQuery++;
                                    //SqlQuery = Sql.SqlQuery(Sql.connection, linea);
                                } catch (SQLException ex) {
                                    JOptionPane.showMessageDialog(this, "Error: " + ex.toString(), "ERROR", JOptionPane.ERROR_MESSAGE, null);
                                    Log.SaveLog(ex.toString());
                                }
                            }
                        }
                    }
                    UpdateProgress();
                    linea = br.readLine();
                }
                JOptionPane.showMessageDialog(this, "Executed: " + NumQuery + " Querys", "INFO", JOptionPane.INFORMATION_MESSAGE, null);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.toString(), "ERROR", JOptionPane.ERROR_MESSAGE, null);
                Log.SaveLog(ex.toString());
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.toString(), "ERROR", JOptionPane.ERROR_MESSAGE, null);
            Log.SaveLog(ex.toString());
        }
        Subir.setEnabled(true);
        jProgressBar1.setValue(0);
    }

    private void UpdateProgress() {
        if (jProgressBar1.getValue() == 100) {
            jProgressBar1.setValue(0);
        }
        jProgressBar1.setValue(jProgressBar1.getValue() + 1);
    }

}
